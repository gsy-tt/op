name: Build OpenWrt for JD BE6500 (IPQ5332)

on:
  workflow_dispatch:  # 手动触发
    inputs:
      with_wsdd2:
        description: '编译包含 WSDD2 (SMB3 支持)'
        required: false
        default: 'true'
        type: boolean
      with_samba4:
        description: '编译包含 Samba4'
        required: false
        default: 'true'
        type: boolean
      with_docker:
        description: '编译包含 Docker 支持'
        required: false
        default: 'true'
        type: boolean
  release:
    types: published  # 发布Release时触发

env:
  LIENOL_REPO: https://github.com/Lienol/openwrt          # Lienol主仓库
  LIENOL_BRANCH: 23.05                                  # 使用23.05分支
  ARCH: ipq807x                                          # 使用ipq807x目标（兼容IPQ5332）
  SUBARCH: generic                                       # 通用子架构
  CPU_ARCH: aarch64_cortex-a53                           # CPU架构
  FEEDS_CONF: feeds.conf.default                         # Feeds配置文件
  CONFIG_FILE: .config                                   # 编译配置文件
  DIY_P1_SH: diy-part1.sh                                # 自定义脚本1
  DIY_P2_SH: diy-part2.sh                                # 自定义脚本2
  UPLOAD_BIN_DIR: false                                  # 不上传bin目录
  UPLOAD_FIRMWARE: true                                  # 上传固件
  UPLOAD_RELEASE: true                                   # 发布到Release
  UPLOAD_CDN: false                                      # 上传到CDN
  TZ: Asia/Shanghai                                      # 时区
  GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}                  # GitHub Token
  CACHE_DIR: ${{ github.workspace }}/openwrt             # 缓存目录
  OPENWRT_PATH: ${{ github.workspace }}/openwrt     

jobs:
  build:
    runs-on: ubuntu-22.04                                 # 直接使用Ubuntu环境

    steps:
    - name: 检查环境
      run: |
        df -hT
        free -h
        cat /proc/cpuinfo
        cat /etc/os-release
    - name: 安装OpenWrt编译依赖
      run: |
        sudo apt-get update
        # 安装OpenWrt官方推荐的编译依赖
        sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libncursesw5-dev libssl-dev python3 python3-distutils python3-setuptools \
          python3-dev rsync subversion swig time unzip wget xmlto zlib1g-dev \
          quilt autopoint libtool-bin gperf flex bison gettext-base asciidoc dos2unix
    - name: 配置Git凭证
      run: |
        git config --global credential.helper store
        echo "https://${GITHUB_TOKEN}:@github.com" > ~/.git-credentials
        echo "Git凭证已配置"
    - name: 克隆Lienol仓库（带重试机制）
      run: |
        rm -rf openwrt
        for i in {1..5}; do
          echo "=== 第 $i 次克隆尝试 ==="
          git clone --depth=1 $LIENOL_REPO -b $LIENOL_BRANCH openwrt
          if [ $? -eq 0 ]; then
            echo "✅ 仓库克隆成功"
            break
          fi
          echo "❌ 克隆失败，15秒后重试..."
          sleep 15
        done
        if [ ! -d "openwrt" ]; then
          echo "💥 五次克隆失败，退出"
          exit 1
        fi
        cd openwrt
        echo "OPENWRT_PATH=$(pwd)" >> $GITHUB_ENV
        echo $GITHUB_ENV
        echo $OPENWRT_PATH
        git log -1
    - name: 缓存依赖包（加速编译）
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHE_DIR }}
        key: ${{ runner.os }}-openwrt-dl-${{ hashFiles('openwrt/dl/**', 'feeds.conf.default') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-dl-

    - name: 下载依赖包（带缓存）
      run: |
        cd $OPENWRT_PATH
        pwd
        ls -la
        [ cat .config ] || echo ".config not"
        cat feeds.conf.default
        ls ./target
        tree ./target
    
   
